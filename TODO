 * Manipulate the value before coercing into an object
 * Difference between key and object? (keys for simple values, objects for complex (need coercion)
 * values with variable (unknown keys) (a la hash)
   - implemented with the object kwyword
     - but maybe would be good to give a trait that gives better access to values and keys
   - validation of the keys of the hash
 * array type
   - implemented (but better access via an attribute trait (like "object")
 * extra fields (things not declared in the schema)
   * Propsal: MooseNonStrict constructor (access the extra values)
   * Proposal: role to access the extra values
   * Proposal: Heredar de una clase base que anade claves
 * fields with validation
   * implement with subtypes?
 * detect differences between type constraints and class names (for better coercion handling)
 * Can't have a key named "key" or an array named "array"
